/*
 * JSocket Wrench
 * 
 * Copyright (C) act365.com October 2003
 * 
 * Web site: http://www.act365.com/wrench
 * E-mail: developers@act365.com
 * 
 * The JSocket Wrench library adds support for low-level Internet protocols
 * to the Java programming language.
 * 
 * This program is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the Free 
 * Software Foundation; either version 2 of the License, or (at your option) 
 * any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with 
 * this program; if not, write to the Free Software Foundation, Inc., 
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_act365_net_GeneralSocketImpl */

#ifndef _Included_com_act365_net_GeneralSocketImpl
#define _Included_com_act365_net_GeneralSocketImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _socket
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1socket
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _bind
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1bind
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _connect
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1connect
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _listen
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1listen
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _accept
 * Signature: (ILjava/net/SocketImpl;)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1accept
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1close
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _getSocketDescriptor
 * Signature: (Ljava/io/FileDescriptor;)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1getSocketDescriptor
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _setSocketDescriptor
 * Signature: (Ljava/io/FileDescriptor;I)V
 */
JNIEXPORT void JNICALL Java_com_act365_net_GeneralSocketImpl__1setSocketDescriptor
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _createInetAddress
 * Signature: (I[B)Ljava/net/InetAddress;
 */
JNIEXPORT jobject JNICALL Java_com_act365_net_GeneralSocketImpl__1createInetAddress
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _setOption
 * Signature: (IIILjava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_act365_net_GeneralSocketImpl__1setOption
  (JNIEnv *, jclass, jint, jint, jint, jobject);

/*
 * Class:     com_act365_net_GeneralSocketImpl
 * Method:    _getOption
 * Signature: (III)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_act365_net_GeneralSocketImpl__1getOption
  (JNIEnv *, jclass, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
